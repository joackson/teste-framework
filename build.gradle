buildscript {
    ext {
        springBootVersion = '1.2.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 
apply plugin: 'maven'

jar {
    baseName = 'teste-framework'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'br.com.testes'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-redis:1.2.3.RELEASE")
    compile("org.codehaus.jackson:jackson-core-asl:1.9.13")
    compile("org.codehaus.jackson:jackson-mapper-asl:1.9.13")

    compile("org.springframework.boot:spring-boot-starter-cloud-connectors:1.2.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-hateoas:1.2.3.RELEASE")
    compile("org.springframework.data:spring-data-redis:1.4.2.RELEASE")
    
    compile("redis.clients:jedis:2.6.2")

    compile("org.codehaus.jackson:jackson-core-asl:1.9.13")
    compile("org.codehaus.jackson:jackson-mapper-asl:1.9.13")
    
    compile("com.fasterxml.jackson.core:jackson-core:2.3.3")
    compile("com.fasterxml.jackson.core:jackson-databind:2.3.3")
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
